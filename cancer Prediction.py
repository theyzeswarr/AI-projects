# -*- coding: utf-8 -*-
"""Breast cancer prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15z5ZJYjYfzVo9UYoA5TiUV1WtdZ1hdmy
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.datasets import load_breast_cancer
from sklearn.metrics import classification_report, confusion_matrix

cancer = load_breast_cancer()
print(cancer)

df = pd.DataFrame(cancer['data'], columns=cancer['feature_names'])

df

df.head()

x_data= cancer.data[:, :1]
labels = cancer.target

x_train, x_test, y_train, y_test = train_test_split(x_data, labels, test_size=0.2, random_state=0)

model = LogisticRegression(solver= 'liblinear', random_state=0)
H = model.fit(x_train, y_train)

print('Logistic Regression Model Coeff (m) =' , model.coef_)
print('Logistic Regression Model Coeff (b) =' , model.intercept_)

y_predict=model.predict(x_test)
print(y_predict)

colors = {0:'red', 1:'blue'}
def sigmoid(x):
  return(1 / (1 +np.exp(-(model.intercept_[0] + (model.coef_[0][0] * x)))))
x1 = np.arange(np.min(x_train), np.max(x_train), 0.01)
y1 = [sigmoid(n) for n in x1]
plt.scatter(x_train,y_train,facecolors='none',edgecolors=pd.DataFrame(cancer.target)[0].apply(lambda x_train:colors[x_train]),cmap=colors)
plt.plot(x1,y1)
plt.xlabel("mean Radius")
plt.ylabel("Probability")
plt.title('Logistic Regression Model')

print("\nPrediction Probability : \n",model.predict_proba(x_test))

print("\nPrediction : ",model.predict(x_test))

print("\nScore : ",model.score(x_test, y_test))

print("\nconfusion Matrix : \n",confusion_matrix(y_test, model.predict(x_test)))

cm = confusion_matrix(y_test, model.predict(x_test))

import seaborn as sn
import pandas as pd
df_cm=pd.DataFrame(cm, range(2), range(2))
plt.figure(figsize=(10,7))
sn.set(font_scale=1.4)
sn.heatmap(df_cm, annot=True, annot_kws={"size": 16})

plt.show()